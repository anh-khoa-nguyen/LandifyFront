import 'package:flutter/material.dart';

import 'package:landifymobile/screens/chat/chat_screen.dart';
import 'package:landifymobile/screens/chat/models/chat_item.dart';
import 'package:landifymobile/screens/chat/widgets/chat_list/app_bar.dart';
import 'package:landifymobile/screens/chat/widgets/chat_list/list_tabs.dart';
import 'package:landifymobile/screens/chat/widgets/chat_list/list_title.dart';

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';

class ChatListScreen extends StatefulWidget {
  const ChatListScreen({super.key});

  @override
  State<ChatListScreen> createState() => _ChatListScreenState();
}

class _ChatListScreenState extends State<ChatListScreen> {
  final FirebaseAuth _auth = FirebaseAuth.instance;
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;

  // D·ªØ li·ªáu gi·∫£, s·ª≠ d·ª•ng ·∫£nh th·∫≠t
  // final List<ChatItem> items = [
  //   ChatItem(avatarUrl: 'https://i.imgur.com/4QfKuz1.jpg', name: 'Cloud c·ªßa t√¥i', message: 'B·∫°n: [H√¨nh ·∫£nh]', time: '2 gi·ªù', verified: true),
  //   ChatItem(avatarUrl: 'https://i.imgur.com/4QfKuz1.jpg', name: 'Nguy·ªÖn V≈© Gia B·∫£o', message: 'Okay', time: 'Ch∆∞a g·ª≠i', isSendingFailed: true),
  //   ChatItem(avatarUrl: 'https://i.imgur.com/4QfKuz1.jpg', name: 'Zalopay', message: 'ü§ù Chung tay v√¨ nh√¢n d√¢n Cuba', time: '3 gi·ªù', verified: true, hasUnread: true),
  //   ChatItem(avatarUrl: 'https://i.imgur.com/4QfKuz1.jpg', name: 'Media Box', message: 'B√°o M·ªõi: To√†n c·∫£nh cu·ªôc g·∫∑p l·ªãch s·ª≠...', time: '16 gi·ªù'),
  //   ChatItem(avatarUrl: 'https://i.imgur.com/4QfKuz1.jpg', name: 'V≈© BingChiling', message: 'H√¨nh nh∆∞ fen c≈©ng c√≥ ƒë√∫ng kh√¥ng', time: '17 gi·ªù'),
  //   ChatItem(avatarUrl: 'https://i.imgur.com/4QfKuz1.jpg', name: 'Ch·ªã Lan (√ân)', message: 'B·∫°n: ƒër', time: '21 gi·ªù'),
  //   ChatItem(avatarUrl: 'https://i.imgur.com/4QfKuz1.jpg', name: 'QL D·ª± √Ån PM', message: 'B·∫°n: Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c thu h·ªìi', time: 'T6'),
  //   ChatItem(avatarUrl: 'https://i.imgur.com/4QfKuz1.jpg', name: 'A M·∫π lu ‚ù§Ô∏è', message: '[Cu·ªôc g·ªçi video ƒëi]', time: 'T6'),
  //   ChatItem(avatarUrl: 'https://i.imgur.com/4QfKuz1.jpg', name: 'L·∫≠p tr√¨nh CSDL', message: 'Nh·∫Øc h·∫πn: 15/08/2025 b√°o c√°o ( ph·∫£i ...', time: 'T6', hasUnread: true),
  // ];

  @override
  Widget build(BuildContext context) {
    final String? currentUserId = _auth.currentUser?.uid;

    if (currentUserId == null) {
      return const Scaffold(
        body: Center(child: Text("Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ xem tin nh·∫Øn.")),
      );
    }

    return Scaffold(
      backgroundColor: Colors.white,
      appBar: const ChatListAppBar(),
      body: Column(
        children: [
          const ChatListTabs(),
          const Divider(height: 1, thickness: 1),
          Expanded(
            child: StreamBuilder<QuerySnapshot>(
              stream: _firestore
                  .collection('chats')
                  .where('users', arrayContains: currentUserId)
                  .orderBy('lastMessageTimestamp', descending: true)
                  .snapshots(),
              builder: (context, snapshot) {
                print('Stream Connection State: ${snapshot.connectionState}');

                if (snapshot.hasError) {
                  print('STREAM ERROR: ${snapshot.error}'); // In ra l·ªói c·ª• th·ªÉ
                  return const Center(child: Text('ƒê√£ c√≥ l·ªói x·∫£y ra.'));
                }
                if (snapshot.connectionState == ConnectionState.waiting) {
                  print('Stream is waiting for data...');
                  return const Center(child: CircularProgressIndicator());
                }

                print('Stream has data: ${snapshot.hasData}');
                if (snapshot.hasData) {
                  print('Documents found: ${snapshot.data!.docs.length}');
                }

                if (!snapshot.hasData || snapshot.data!.docs.isEmpty) {
                  return const Center(child: Text('B·∫°n ch∆∞a c√≥ cu·ªôc tr√≤ chuy·ªán n√†o.'));
                }

                // N·∫øu c√≥ d·ªØ li·ªáu, hi·ªÉn th·ªã ListView
                final chatDocs = snapshot.data!.docs;
                return ListView.separated(
                  itemCount: chatDocs.length,
                  separatorBuilder: (context, index) => const Divider(height: 1, indent: 88, endIndent: 16),
                  itemBuilder: (context, index) {
                    // X√¢y d·ª±ng m·ªôt widget cho m·ªói cu·ªôc tr√≤ chuy·ªán
                    return _buildChatListItem(chatDocs[index]);
                  },
                );
              },
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildChatListItem(DocumentSnapshot chatDoc) {
    Map<String, dynamic> data = chatDoc.data() as Map<String, dynamic>;
    final String currentUserId = _auth.currentUser!.uid;

    // L·∫•y ID c·ªßa ng∆∞·ªùi c√≤n l·∫°i trong cu·ªôc tr√≤ chuy·ªán
    List<String> users = List<String>.from(data['users']);
    final String otherUserId = users.firstWhere((id) => id != currentUserId, orElse: () => '');

    if (otherUserId.isEmpty) {
      return const SizedBox.shrink(); // B·ªè qua n·∫øu c√≥ l·ªói d·ªØ li·ªáu
    }

    // S·ª¨ D·ª§NG PHI√äN B·∫¢N FUTUREBUILDER AN TO√ÄN H∆†N
    return FutureBuilder<DocumentSnapshot>(
      future: _firestore.collection('users').doc(otherUserId).get(),
      builder: (context, userSnapshot) {
        // --- C√ÅC B∆Ø·ªöC KI·ªÇM TRA AN TO√ÄN ---

        // 1. Ki·ªÉm tra n·∫øu c√≥ l·ªói k·∫øt n·ªëi
        if (userSnapshot.hasError) {
          return const ListTile(title: Text("L·ªói t·∫£i d·ªØ li·ªáu ng∆∞·ªùi d√πng."));
        }

        // 2. Ki·ªÉm tra n·∫øu ƒëang t·∫£i
        if (userSnapshot.connectionState == ConnectionState.waiting) {
          return const ListTile(title: Text("ƒêang t·∫£i..."));
        }

        // 3. (QUAN TR·ªåNG NH·∫§T) Ki·ªÉm tra n·∫øu document kh√¥ng t·ªìn t·∫°i
        if (!userSnapshot.hasData || !userSnapshot.data!.exists) {
          return ListTile(title: Text("Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng: $otherUserId"));
        }

        // --- KHI D·ªÆ LI·ªÜU AN TO√ÄN ---
        // Ch·ªâ khi v∆∞·ª£t qua t·∫•t c·∫£ c√°c b∆∞·ªõc ki·ªÉm tra, ch√∫ng ta m·ªõi ti·∫øn h√†nh ƒë·ªçc d·ªØ li·ªáu
        final userData = userSnapshot.data!.data() as Map<String, dynamic>;

        final chatItem = ChatItem(
          avatarUrl: userData['avatarUrl'] ?? 'https://i.imgur.com/4QfKuz1.jpg',
          name: userData['displayName'] ?? 'Ng∆∞·ªùi d√πng kh√¥ng t√™n',
          message: data['lastMessage'] ?? '',
          time: 'T5', // TODO: Format l·∫°i timestamp
        );

        return ChatListTile(
          item: chatItem,
          onTap: () {
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) => ChatScreen(
                  receiverId: otherUserId,
                  receiverName: chatItem.name,
                ),
              ),
            );
          },
        );
      },
    );
  }
}